(()=>{const e=["Open","Request","Close","Error"];class t{constructor(){this.events=[]}add(e){this.events.push(e)}trigger(...e){this.events.forEach(t=>t(...e))}static createEventHandler(e){let s={};return e.forEach(e=>{s[e]=new t}),s}}window.RequestHandler=class{constructor(){this.event=t.createEventHandler(e),this.socket=new WebSocket("ws://localhost:4000"),this.socket.onopen=(e=>this.event.Open.trigger(e)),this.socket.onmessage=(e=>this.event.Request.trigger(JSON.parse(e.data))),this.socket.onclose=(e=>this.event.Close.trigger(e)),this.socket.onerror=(e=>this.event.Error.trigger(e))}on(e,t){this.event[e].add(t)}send(e,t){this.socket.send(JSON.stringify({id:t,data:e}))}close(){this.socket.close()}}})();