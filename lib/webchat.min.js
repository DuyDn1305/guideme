(()=>{function e(e,t){$.post({url:"/guideme/lib/webchat.php",data:e}).done(t)}class t{constructor(){this.events=[]}add(e){this.events.push(e)}trigger(...e){this.events.forEach(t=>t(...e))}static createEventHandler(e){let s={};return e.forEach(e=>{s[e]=new t}),s}static createEventCallback(e,t){let s={};for(let o in e)s[`on${o}`]=function(...s){t?e[o].trigger(t,...s):e[o].trigger(...s)};return s}}const s=["AddedToRoom","RemovedFromRoom","RoomUpdated","RoomDeleted"],o=["Message","UserJoined","UserLeft","PresenceChanged","NewReadCursor"];function r(){}window.getMsg=function(e){let t=e.parts[0],s=t.partType;return"inline"==s?t.payload.content:"url"==s?t.payload.url:t.payload.name},window.WebChat=class{constructor(e){this.events={user:t.createEventHandler(s),room:t.createEventHandler(o)},this.ready=[],new Chatkit.ChatManager({instanceLocator:"v1:us1:c2c8e696-a9e8-407b-934b-5baa4fb0f4d0",userId:e,tokenProvider:new Chatkit.TokenProvider({url:"https://us1.pusherplatform.io/services/chatkit_token_provider/v1/c2c8e696-a9e8-407b-934b-5baa4fb0f4d0/token"})}).connect(t.createEventCallback(this.events.user)).then(e=>{this.user=e,this.on("AddedToRoom",e=>this.subscribe(e.id)),this.ready.forEach(e=>e()),this.loaded=1,this.readyLastRun()})}on(e,t){s.includes(e)?this.events.user[e].add(t):this.events.room[e].add(t)}static createUser(t,s,o=r){e({createUser:{uniqueId:t,name:s}},o)}static deleteUser(t,s=r){e({deleteUser:t},s)}static existRoom(t,s,o=r){e({exist:{id1:t,id2:s}},o)}static markRoom(t,s,o,i=r){e({mark:{id1:t,id2:s,roomId:o}},i)}disconnect(){this.user.disconnect()}getAllRooms(e){this.user.rooms.forEach(e)}createRoom(e,t=r){void 0===e.name&&(e.name=this.user.id),void 0===e.addUserIds&&(e.addUserIds=[]),e.private=!0,this.user.createRoom(e).then(t)}addUsersToRoom(e,t=r){e.userIds.forEach(s=>{this.user.addUserToRoom({userId:s,roomId:e.roomId}).then(t)})}removeUserFromRoom(e,t=r){this.user.removeUserFromRoom(e).then(t)}joinRoom(e,t=r){this.user.joinRoom({roomId:e}).then(s=>{this.subscribe(e,0),t(s)})}leaveRoom(e,t=r){this.user.leaveRoom({roomId:e}).then(t)}deleteRoom(e,t=r){this.user.deleteRoom({roomId:e}).then(t)}sendMessage(e,t,s=r){this.user.sendSimpleMessage({roomId:e,text:t}).then(s)}static deleteMessage(t,s=r){e({deleteMsg:parseInt(t)},s)}getMessages(e,t,s,o){this.user.fetchMultipartMessages({roomId:e,initialId:t||void 0,limit:s?Math.min(s,100):void 0,direction:"older"}).then(o)}setReadCursor(e,t,s=r){let o=this.getReadCursor(e);o&&o.position==t||this.user.setReadCursor({roomId:e,position:t}).then(s)}getReadCursor(e,t){return this.user.readCursor({roomId:e,userId:t})}subscribe(e,s){return this.user.subscribeToRoomMultipart({roomId:e,messageLimit:s||0,hooks:t.createEventCallback(this.events.room,e)})}}})();